
import 'dart:math';

import 'package:flutter/material.dart';
import 'package:hive_flutter/adapters.dart';
import 'package:table_app/widgets/boxes.dart';
import 'package:table_app/widgets/tableModel.dart';

// ignore: must_be_immutable
class Quizz extends StatefulWidget{
  dynamic total;

  Quizz({super.key,required this.total});
  @override
  State<StatefulWidget> createState() => QuizzState();
}
class QuizzState extends State<Quizz> {
  var question = TextEditingController();
  var answer = TextEditingController();
  int count = 0;
  int wrong = 0;
  int x = 0;
  int y = 0;
  Random random1 = Random();
  @override
  Widget build(BuildContext context) {
        return Scaffold(
          bottomNavigationBar: (count==0)?Row(
            children: [
              TextButton(onPressed: (){
                delet();
              }, child: const Text('Clear Stats',style: TextStyle(color: Colors.red),)),
              TextButton(
                onPressed: (){
                  _firstQuestion();
                },child: const Text('Start'),
              ),
            ],
          ):Row(
            children: [
              TextButton(onPressed: (){
                delet();
              }, child: const Text('Clear Stats',style: TextStyle(fontSize: 15,color: Colors.red),)),
              const SizedBox(width: 20,),
              Text("True = $count"),
              const SizedBox(width: 20,),
              Text('False = $wrong'),
              const SizedBox(width: 30,),
              TextButton(onPressed: (){
                delet();
                _firstQuestion();
              }, child: const Text('Start Again',style: TextStyle(fontSize: 15),))
            ],
          ),
      appBar: AppBar(
        title: const Text('Quiz Generated By Your Table'),
      ),
      body: ValueListenableBuilder<Box<TableModel>>(
          valueListenable: Boxes.getData().listenable(),
          builder: (context, box, _) {
            var data = box.values.toList().cast<TableModel>();
            return ListView.builder(
              itemCount: box.length,
              itemBuilder: (context, index) {
              return Padding(
                padding: const EdgeInsets.all(4.0),
                child: Card(
                  shape: const OutlineInputBorder(),
                  elevation: 2,
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                      children: [
                        const Text(''),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(data[index].Question.toString()),
                            const SizedBox(width: 10,),
                            Text(data[index].Answer.toString()),
                          ],
                        ),
                        const Text('')
                      ],
                    ),
                  ),
                ),
              );
            },);
          },)
    );
  }
Future<void> _firstQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
  question.text = " $x * $y = ";
  return showDialog(context: context,
      builder: (context) => AlertDialog(
        title: const Text('Question 1'),
        actions: [
          TextButton(onPressed: (){
            answer.text = ' 0     Unattempted';
             ading(question.text,answer.text);
            Navigator.pop(context);
            _secondQuestion();
          }, child: const Text('Next'))
        ],
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                readOnly: true,
                controller: question,
              ),
              Row(
                children: [
                  TextButton(onPressed: () async {
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    count++;
                    Navigator.pop(context);
                    _secondQuestion();
                  }, child: Text('${x*y}',style: const TextStyle(fontSize: 20),)),
                  TextButton(onPressed: (){
                    answer.text = '${x*5 +y}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _secondQuestion();
                  }, child: Text('${x*5+y}',style: const TextStyle(fontSize: 20),)),
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x* y +2}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _secondQuestion();
                  }, child: Text('${x*y+2}',style: const TextStyle(fontSize: 20),)),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _secondQuestion();
                  }, child: Text('${x*y+3}',style: const TextStyle(fontSize: 20),)),
                ],
              ),
            ],
          ),
        ),
      ),);
}

Future<void> _secondQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller: question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+2}   False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _thirdQuestion();
                  }, child: Text('${x*y+2}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _thirdQuestion();
                  }, child: Text('${x*y+3}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y}    True';
                    count++;
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    _thirdQuestion();
                  }, child: Text('${x*y}')),
                  TextButton(onPressed: (){
                    Navigator.pop(context);
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    wrong++;
                    _thirdQuestion();
                  }, child: Text('${x*y+4}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 2'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0    Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            _thirdQuestion();
          }, child: const Text('Next'))
        ],
      );
    },);
}

  Future<void> _thirdQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller:question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    count++;
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    _fourthQuestion();
                  }, child: Text('${x*y}')),
                  TextButton(onPressed: (){
                    Navigator.pop(context);
                    answer.text = '${x*y+2}    False';
                    ading(question.text, answer.text);
                    wrong++;
                    _fourthQuestion();
                  }, child: Text('${x*y+2}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _fourthQuestion();
                  }, child: Text('${x*y+3}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _fourthQuestion();
                  }, child: Text('${x*y+4}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 3'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0    Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            _fourthQuestion();
          }, child: const Text('Next'))
        ],
      );
    },);
  }

  Future<void> _fourthQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller:question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+2}    False';
                    ading(question.text, answer.text);
                    wrong++;
                    Navigator.pop(context);
                    _fifthQuestion();
                  }, child: Text('${x*y+2}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    wrong++;
                    Navigator.pop(context);
                    _fifthQuestion();
                  }, child: Text('${x*y+3}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    count++;
                    Navigator.pop(context);
                    _fifthQuestion();
                  }, child: Text('${x*y}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    wrong++;
                    Navigator.pop(context);
                    _fifthQuestion();
                  }, child: Text('${x*y+4}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 4'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0 Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            _fifthQuestion();
          }, child: const Text('Next'))
        ],
      );
    },);
  }

  Future<void> _fifthQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller:question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+2}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _sixthQuestion();
                  }, child: Text('${x*y+2}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    wrong++;
                    Navigator.pop(context);
                    _sixthQuestion();
                  }, child: Text('${x*y+3}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _sixthQuestion();
                  }, child: Text('${x*y+4}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    count++;
                    Navigator.pop(context);
                    _sixthQuestion();
                  }, child: Text('${x*y}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 5'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0    Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            _sixthQuestion();
          }, child: const Text('Next'))
        ],
      );
    },);
  }

  Future<void> _sixthQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
      return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller:question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+2}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _sevenQuestion();
                    setState(() {});
                  }, child: Text('${x*y+2}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _sevenQuestion();
                    setState(() {});
                  }, child: Text('${x*y+3}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _sevenQuestion();
                    setState(() {});
                  }, child: Text('${x*y+4}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    count++;
                    Navigator.pop(context);
                    _sevenQuestion();
                    setState(() {});
                  }, child: Text('${x*y}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 6'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0    Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            _sevenQuestion();
            setState(() {});
          }, child: const Text('Next'))
        ],
      );
    },);
  }

  Future<void> _sevenQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller:question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+2}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _eightQuestion();
                    setState(() {});
                  }, child: Text('${x*y+2}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _eightQuestion();
                    setState(() {});
                  }, child: Text('${x*y+3}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    _eightQuestion();
                    setState(() {});
                  }, child: Text('${x*y+4}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    count++;
                    Navigator.pop(context);
                    _eightQuestion();
                    setState(() {});
                  }, child: Text('${x*y}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 7'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0    Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            _eightQuestion();
            setState(() {});
          }, child: const Text('Next'))
        ],
      );
    },);
  }

  Future<void> _eightQuestion() {
    x = random1.nextInt(int.parse(widget.total));
    y = random1.nextInt(int.parse(widget.total));
    question.text = '$x * $y = ';
    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        content: SingleChildScrollView(
          child: Column(
            children: [
              TextFormField(
                controller:question,
                readOnly: true,
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+2}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    setState(() {});
                  }, child: Text('${x*y+2}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y+3}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    setState(() {});
                  }, child: Text('${x*y+3}'))
                ],
              ),
              Row(
                children: [
                  TextButton(onPressed: (){
                    answer.text = '${x*y+4}    False';
                    ading(question.text, answer.text);
                    Navigator.pop(context);
                    wrong++;
                    setState(() {});
                  }, child: Text('${x*y+4}')),
                  TextButton(onPressed: (){
                    answer.text = '${x*y}    True';
                    ading(question.text, answer.text);
                    count++;
                    Navigator.pop(context);
                    setState(() {});
                  }, child: Text('${x*y}'))
                ],
              )
            ],
          ),
        ),
        title: const Text('Question 8'),
        actions: [
          TextButton(onPressed: (){
            answer.text = '0    Unattempted';
            ading(question.text, answer.text);
            Navigator.pop(context);
            setState(() {});
          }, child: const Text('End'))
        ],
      );
    },);
  }

  Future<void> delet() async {
     var box = Boxes.getData();
     box.clear();
     count = 0;
     wrong =0;
     setState(() {});
  }

  void ading(String ques,String ans) {
    var data = TableModel(ques.toString(), ans.toString());
    var box = Boxes.getData();
    box.add(data);
  }
}